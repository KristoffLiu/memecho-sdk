/* tslint:disable */
/* eslint-disable */
/**
 * ServiceHub API
 * 服务中心API接口
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppendData,
  AppendResult,
  HTTPValidationError,
  HealthResponse,
  MemoryLibraryCreationData,
  MemoryLibraryGetRequest,
  MemoryLibraryInformation,
  MemoryLibraryList,
  QueryData,
  QueryResult,
} from '../models/index';
import {
    AppendDataFromJSON,
    AppendDataToJSON,
    AppendResultFromJSON,
    AppendResultToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    HealthResponseFromJSON,
    HealthResponseToJSON,
    MemoryLibraryCreationDataFromJSON,
    MemoryLibraryCreationDataToJSON,
    MemoryLibraryGetRequestFromJSON,
    MemoryLibraryGetRequestToJSON,
    MemoryLibraryInformationFromJSON,
    MemoryLibraryInformationToJSON,
    MemoryLibraryListFromJSON,
    MemoryLibraryListToJSON,
    QueryDataFromJSON,
    QueryDataToJSON,
    QueryResultFromJSON,
    QueryResultToJSON,
} from '../models/index';

export interface AppendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePostRequest {
    appendData: AppendData;
}

export interface CreateMemoryLibraryEndpointApiV1MemoryCreatePostRequest {
    memoryLibraryCreationData: MemoryLibraryCreationData;
}

export interface GetMemoryLibraryEndpointApiV1MemoryGetPostRequest {
    memoryLibraryGetRequest: MemoryLibraryGetRequest;
}

export interface MemoryQueryEndpointApiV1MemoryQueryPostRequest {
    queryData: QueryData;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * 追加AI助手消息API端点 接收AppendData和API key，返回AppendResult
     * Append Assistant Message Endpoint
     */
    async appendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePostRaw(requestParameters: AppendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppendResult>> {
        if (requestParameters['appendData'] == null) {
            throw new runtime.RequiredError(
                'appendData',
                'Required parameter "appendData" was null or undefined when calling appendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/v1/memory/append-assistant-message`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AppendDataToJSON(requestParameters['appendData']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppendResultFromJSON(jsonValue));
    }

    /**
     * 追加AI助手消息API端点 接收AppendData和API key，返回AppendResult
     * Append Assistant Message Endpoint
     */
    async appendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePost(requestParameters: AppendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppendResult> {
        const response = await this.appendAssistantMessageEndpointApiV1MemoryAppendAssistantMessagePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 创建记忆库API端点 接收MemoryLibraryCreationData和API key，返回MemoryLibraryInformation
     * Create Memory Library Endpoint
     */
    async createMemoryLibraryEndpointApiV1MemoryCreatePostRaw(requestParameters: CreateMemoryLibraryEndpointApiV1MemoryCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MemoryLibraryInformation>> {
        if (requestParameters['memoryLibraryCreationData'] == null) {
            throw new runtime.RequiredError(
                'memoryLibraryCreationData',
                'Required parameter "memoryLibraryCreationData" was null or undefined when calling createMemoryLibraryEndpointApiV1MemoryCreatePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/v1/memory/create`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MemoryLibraryCreationDataToJSON(requestParameters['memoryLibraryCreationData']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MemoryLibraryInformationFromJSON(jsonValue));
    }

    /**
     * 创建记忆库API端点 接收MemoryLibraryCreationData和API key，返回MemoryLibraryInformation
     * Create Memory Library Endpoint
     */
    async createMemoryLibraryEndpointApiV1MemoryCreatePost(requestParameters: CreateMemoryLibraryEndpointApiV1MemoryCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MemoryLibraryInformation> {
        const response = await this.createMemoryLibraryEndpointApiV1MemoryCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 获取记忆库详情API端点 接收MemoryLibraryGetRequest和API key，返回MemoryLibraryInformation
     * Get Memory Library Endpoint
     */
    async getMemoryLibraryEndpointApiV1MemoryGetPostRaw(requestParameters: GetMemoryLibraryEndpointApiV1MemoryGetPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MemoryLibraryInformation>> {
        if (requestParameters['memoryLibraryGetRequest'] == null) {
            throw new runtime.RequiredError(
                'memoryLibraryGetRequest',
                'Required parameter "memoryLibraryGetRequest" was null or undefined when calling getMemoryLibraryEndpointApiV1MemoryGetPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/v1/memory/get`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MemoryLibraryGetRequestToJSON(requestParameters['memoryLibraryGetRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MemoryLibraryInformationFromJSON(jsonValue));
    }

    /**
     * 获取记忆库详情API端点 接收MemoryLibraryGetRequest和API key，返回MemoryLibraryInformation
     * Get Memory Library Endpoint
     */
    async getMemoryLibraryEndpointApiV1MemoryGetPost(requestParameters: GetMemoryLibraryEndpointApiV1MemoryGetPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MemoryLibraryInformation> {
        const response = await this.getMemoryLibraryEndpointApiV1MemoryGetPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 健康检查接口
     * Health Check
     */
    async healthCheckHealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HealthResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/health`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HealthResponseFromJSON(jsonValue));
    }

    /**
     * 健康检查接口
     * Health Check
     */
    async healthCheckHealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HealthResponse> {
        const response = await this.healthCheckHealthGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 列出记忆库API端点 接收API key，返回MemoryLibraryList
     * List Memory Libraries Endpoint
     */
    async listMemoryLibrariesEndpointApiV1MemoryListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MemoryLibraryList>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/memory/list`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MemoryLibraryListFromJSON(jsonValue));
    }

    /**
     * 列出记忆库API端点 接收API key，返回MemoryLibraryList
     * List Memory Libraries Endpoint
     */
    async listMemoryLibrariesEndpointApiV1MemoryListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MemoryLibraryList> {
        const response = await this.listMemoryLibrariesEndpointApiV1MemoryListGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 内存查询API端点 接收QueryData和API key，返回QueryResult
     * Memory Query Endpoint
     */
    async memoryQueryEndpointApiV1MemoryQueryPostRaw(requestParameters: MemoryQueryEndpointApiV1MemoryQueryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryResult>> {
        if (requestParameters['queryData'] == null) {
            throw new runtime.RequiredError(
                'queryData',
                'Required parameter "queryData" was null or undefined when calling memoryQueryEndpointApiV1MemoryQueryPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/v1/memory/query`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: QueryDataToJSON(requestParameters['queryData']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QueryResultFromJSON(jsonValue));
    }

    /**
     * 内存查询API端点 接收QueryData和API key，返回QueryResult
     * Memory Query Endpoint
     */
    async memoryQueryEndpointApiV1MemoryQueryPost(requestParameters: MemoryQueryEndpointApiV1MemoryQueryPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryResult> {
        const response = await this.memoryQueryEndpointApiV1MemoryQueryPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
