/* tslint:disable */
/* eslint-disable */
/**
 * ServiceHub API
 * 服务中心API接口
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Content } from './Content';
import {
    ContentFromJSON,
    ContentFromJSONTyped,
    ContentToJSON,
    ContentToJSONTyped,
} from './Content';

/**
 * 
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * 
     * @type {Array<Content>}
     * @memberof Message
     */
    content: Array<Content>;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    role: MessageRoleEnum;
}


/**
 * @export
 */
export const MessageRoleEnum = {
    User: 'user',
    Assistant: 'assistant'
} as const;
export type MessageRoleEnum = typeof MessageRoleEnum[keyof typeof MessageRoleEnum];


/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'content': ((json['content'] as Array<any>).map(ContentFromJSON)),
        'role': json['role'],
    };
}

export function MessageToJSON(json: any): Message {
    return MessageToJSONTyped(json, false);
}

export function MessageToJSONTyped(value?: Message | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': ((value['content'] as Array<any>).map(ContentToJSON)),
        'role': value['role'],
    };
}

