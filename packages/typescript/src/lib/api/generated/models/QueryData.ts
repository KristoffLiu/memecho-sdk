/* tslint:disable */
/* eslint-disable */
/**
 * ServiceHub API
 * 服务中心API接口
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
    MessageToJSONTyped,
} from './Message';

/**
 * 
 * @export
 * @interface QueryData
 */
export interface QueryData {
    /**
     * 
     * @type {Message}
     * @memberof QueryData
     */
    query: Message;
    /**
     * 
     * @type {string}
     * @memberof QueryData
     */
    memoryLibId: string;
    /**
     * 
     * @type {string}
     * @memberof QueryData
     */
    timezone?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QueryData
     */
    language?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QueryData
     */
    userTime?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof QueryData
     */
    readonly?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof QueryData
     */
    includeUserQuery?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof QueryData
     */
    requireRawRecallMessageIdList?: boolean;
}

/**
 * Check if a given object implements the QueryData interface.
 */
export function instanceOfQueryData(value: object): value is QueryData {
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('memoryLibId' in value) || value['memoryLibId'] === undefined) return false;
    return true;
}

export function QueryDataFromJSON(json: any): QueryData {
    return QueryDataFromJSONTyped(json, false);
}

export function QueryDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryData {
    if (json == null) {
        return json;
    }
    return {
        
        'query': MessageFromJSON(json['query']),
        'memoryLibId': json['memory_lib_id'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'language': json['language'] == null ? undefined : json['language'],
        'userTime': json['user_time'] == null ? undefined : json['user_time'],
        'readonly': json['readonly'] == null ? undefined : json['readonly'],
        'includeUserQuery': json['include_user_query'] == null ? undefined : json['include_user_query'],
        'requireRawRecallMessageIdList': json['require_raw_recall_message_id_list'] == null ? undefined : json['require_raw_recall_message_id_list'],
    };
}

export function QueryDataToJSON(json: any): QueryData {
    return QueryDataToJSONTyped(json, false);
}

export function QueryDataToJSONTyped(value?: QueryData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': MessageToJSON(value['query']),
        'memory_lib_id': value['memoryLibId'],
        'timezone': value['timezone'],
        'language': value['language'],
        'user_time': value['userTime'],
        'readonly': value['readonly'],
        'include_user_query': value['includeUserQuery'],
        'require_raw_recall_message_id_list': value['requireRawRecallMessageIdList'],
    };
}

